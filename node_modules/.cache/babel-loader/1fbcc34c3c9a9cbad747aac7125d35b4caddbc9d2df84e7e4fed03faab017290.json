{"ast":null,"code":"var _jsxFileName = \"/Users/user/Work/Code/dyslexia-reader/dyslexia-reader/src/components/reader.js\",\n  _s = $RefreshSig$();\n/* eslint-env browser */\nimport React, { useEffect, useState } from \"react\";\nimport { article } from \"./articles\";\nimport SpeechKit from \"./speechkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst splitTextAtCharIndex = (text, charIndex) => {\n  const before = text.slice(0, charIndex);\n  let after = text.slice(charIndex, text.length).split(\" \");\n  let currentWord;\n  if (after.length && after[0] !== \"\") {\n    currentWord = after.shift();\n    after = after.join(\" \");\n  } else after = text;\n  return {\n    before,\n    currentWord,\n    after\n  };\n};\n/* create <br /> react nodes for new lines in string */\nconst renderText = text => text.split(\"\\n\").map((item, index) => index === 0 ? item : [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 64\n}, this), item]);\nconst renderHighlight = (before, currentWord, after) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"App-intro\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: renderText(before)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        backgroundColor: \"yellow\"\n      },\n      children: renderText(currentWord + \" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: renderText(after)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\nexport default function Reader() {\n  _s();\n  const [refresh, setRefresh] = useState(0);\n  const [rate, setRate] = useState(1.0);\n  const [openSpeechKit, setOpenSpeechKit] = useState(false);\n  const [state, setState] = useState({\n    utterance: null,\n    currentWord: \"\",\n    before: \"\",\n    after: \"\",\n    synth: {}\n  });\n  const {\n    before,\n    currentWord,\n    after,\n    utterance,\n    synth\n  } = state;\n  const {\n    speaking\n  } = synth;\n  useEffect(() => {\n    const u = new SpeechSynthesisUtterance();\n    const voices = speechSynthesis.getVoices();\n    const filteredVoices = voices.filter(_ref => {\n      let {\n        lang\n      } = _ref;\n      return lang === \"en-GB\";\n    });\n    u.text = article;\n    u.lang = \"en-gb\";\n    u.rate = rate;\n    u.voice = filteredVoices[0];\n    u.onboundary = e => {\n      setState({\n        ...state,\n        ...splitTextAtCharIndex(u.text, e.charIndex)\n      });\n    };\n    const synth = speechSynthesis;\n    synth.cancel();\n    setState({\n      ...state,\n      utterance: u,\n      synth: synth,\n      before: \"\",\n      currentWord: \"\",\n      after: u.text\n    });\n  }, [refresh]);\n  const handleCancel = () => {\n    setRefresh(refresh + 1);\n    state.synth.cancel();\n  };\n  const handleChangeRate = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const val = target.value;\n    setRate(val);\n    setRefresh(refresh + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => synth.speak(utterance),\n      disabled: speaking,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Stop\",\n      onClick: handleCancel,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"rate-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rate\",\n        children: \"Speed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0.5\",\n        max: \"2\",\n        value: rate,\n        step: \"0.1\",\n        id: \"rate\",\n        onChange: handleChangeRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), renderHighlight(before, currentWord, after), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenSpeechKit(true),\n      children: \"Open Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpeechKit, {\n      open: openSpeechKit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Reader, \"H+llcHXAUhllXhNZKhxUXjqFUb4=\");\n_c = Reader;\nvar _c;\n$RefreshReg$(_c, \"Reader\");","map":{"version":3,"names":["React","useEffect","useState","article","SpeechKit","splitTextAtCharIndex","text","charIndex","before","slice","after","length","split","currentWord","shift","join","renderText","map","item","index","renderHighlight","backgroundColor","Reader","refresh","setRefresh","rate","setRate","openSpeechKit","setOpenSpeechKit","state","setState","utterance","synth","speaking","u","SpeechSynthesisUtterance","voices","speechSynthesis","getVoices","filteredVoices","filter","lang","voice","onboundary","e","cancel","handleCancel","handleChangeRate","target","val","value","speak"],"sources":["/Users/user/Work/Code/dyslexia-reader/dyslexia-reader/src/components/reader.js"],"sourcesContent":["/* eslint-env browser */\nimport React, { useEffect, useState } from \"react\";\nimport { article } from \"./articles\";\nimport SpeechKit from \"./speechkit\";\n\nconst splitTextAtCharIndex = (text, charIndex) => {\n  const before = text.slice(0, charIndex);\n  let after = text.slice(charIndex, text.length).split(\" \");\n  let currentWord;\n  if (after.length && after[0] !== \"\") {\n    currentWord = after.shift();\n    after = after.join(\" \");\n  } else after = text;\n  return {\n    before,\n    currentWord,\n    after,\n  };\n};\n/* create <br /> react nodes for new lines in string */\nconst renderText = (text) =>\n  text.split(\"\\n\").map((item, index) => (index === 0 ? item : [<br />, item]));\nconst renderHighlight = (before, currentWord, after) => {\n  return (\n    <p className='App-intro'>\n      <span>{renderText(before)}</span>\n      <span style={{ backgroundColor: \"yellow\" }}>\n        {renderText(currentWord + \" \")}\n      </span>\n      <span>{renderText(after)}</span>\n    </p>\n  );\n};\nexport default function Reader() {\n  const [refresh, setRefresh] = useState(0);\n  const [rate, setRate] = useState(1.0);\n  const [openSpeechKit, setOpenSpeechKit] = useState(false);\n  const [state, setState] = useState({\n    utterance: null,\n    currentWord: \"\",\n    before: \"\",\n    after: \"\",\n    synth: {},\n  });\n\n  const { before, currentWord, after, utterance, synth } = state;\n  const { speaking } = synth;\n\n  useEffect(() => {\n    const u = new SpeechSynthesisUtterance();\n\n    const voices = speechSynthesis.getVoices();\n    const filteredVoices = voices.filter(({ lang }) => lang === \"en-GB\");\n\n    u.text = article;\n    u.lang = \"en-gb\";\n    u.rate = rate;\n    u.voice = filteredVoices[0];\n\n    u.onboundary = (e) => {\n      setState({ ...state, ...splitTextAtCharIndex(u.text, e.charIndex) });\n    };\n\n    const synth = speechSynthesis;\n    synth.cancel();\n    setState({\n      ...state,\n      utterance: u,\n      synth: synth,\n      before: \"\",\n      currentWord: \"\",\n      after: u.text,\n    });\n  }, [refresh]);\n\n  const handleCancel = () => {\n    setRefresh(refresh + 1);\n    state.synth.cancel();\n  };\n\n  const handleChangeRate = ({ target }) => {\n    const val = target.value;\n    setRate(val);\n    setRefresh(refresh + 1);\n  };\n\n  return (\n    <div>\n      <button onClick={() => synth.speak(utterance)} disabled={speaking}>\n        Start\n      </button>\n      <button className='Stop' onClick={handleCancel}>\n        Stop\n      </button>\n      <div id='rate-control'>\n        <label htmlFor='rate'>Speed:</label>\n        <input\n          type='range'\n          min='0.5'\n          max='2'\n          value={rate}\n          step='0.1'\n          id='rate'\n          onChange={handleChangeRate}\n        />\n      </div>\n      {renderHighlight(before, currentWord, after)}\n      <button onClick={() => setOpenSpeechKit(true)}>Open Assessment</button>\n      <SpeechKit open={openSpeechKit} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,MAAMC,oBAAoB,GAAG,CAACC,IAAI,EAAEC,SAAS,KAAK;EAChD,MAAMC,MAAM,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,EAAEF,SAAS,CAAC;EACvC,IAAIG,KAAK,GAAGJ,IAAI,CAACG,KAAK,CAACF,SAAS,EAAED,IAAI,CAACK,MAAM,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EACzD,IAAIC,WAAW;EACf,IAAIH,KAAK,CAACC,MAAM,IAAID,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;IACnCG,WAAW,GAAGH,KAAK,CAACI,KAAK,EAAE;IAC3BJ,KAAK,GAAGA,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC;EACzB,CAAC,MAAML,KAAK,GAAGJ,IAAI;EACnB,OAAO;IACLE,MAAM;IACNK,WAAW;IACXH;EACF,CAAC;AACH,CAAC;AACD;AACA,MAAMM,UAAU,GAAIV,IAAI,IACtBA,IAAI,CAACM,KAAK,CAAC,IAAI,CAAC,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAMA,KAAK,KAAK,CAAC,GAAGD,IAAI,GAAG,cAAC;EAAA;EAAA;EAAA;AAAA,QAAM,EAAEA,IAAI,CAAE,CAAC;AAC9E,MAAME,eAAe,GAAG,CAACZ,MAAM,EAAEK,WAAW,EAAEH,KAAK,KAAK;EACtD,oBACE;IAAG,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAA,UAAOM,UAAU,CAACR,MAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAAQ,eACjC;MAAM,KAAK,EAAE;QAAEa,eAAe,EAAE;MAAS,CAAE;MAAA,UACxCL,UAAU,CAACH,WAAW,GAAG,GAAG;IAAC;MAAA;MAAA;MAAA;IAAA,QACzB,eACP;MAAA,UAAOG,UAAU,CAACN,KAAK;IAAC;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAER,CAAC;AACD,eAAe,SAASY,MAAM,GAAG;EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC;IACjC6B,SAAS,EAAE,IAAI;IACflB,WAAW,EAAE,EAAE;IACfL,MAAM,EAAE,EAAE;IACVE,KAAK,EAAE,EAAE;IACTsB,KAAK,EAAE,CAAC;EACV,CAAC,CAAC;EAEF,MAAM;IAAExB,MAAM;IAAEK,WAAW;IAAEH,KAAK;IAAEqB,SAAS;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAC9D,MAAM;IAAEI;EAAS,CAAC,GAAGD,KAAK;EAE1B/B,SAAS,CAAC,MAAM;IACd,MAAMiC,CAAC,GAAG,IAAIC,wBAAwB,EAAE;IAExC,MAAMC,MAAM,GAAGC,eAAe,CAACC,SAAS,EAAE;IAC1C,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAM,CAAC;MAAA,IAAC;QAAEC;MAAK,CAAC;MAAA,OAAKA,IAAI,KAAK,OAAO;IAAA,EAAC;IAEpEP,CAAC,CAAC5B,IAAI,GAAGH,OAAO;IAChB+B,CAAC,CAACO,IAAI,GAAG,OAAO;IAChBP,CAAC,CAACT,IAAI,GAAGA,IAAI;IACbS,CAAC,CAACQ,KAAK,GAAGH,cAAc,CAAC,CAAC,CAAC;IAE3BL,CAAC,CAACS,UAAU,GAAIC,CAAC,IAAK;MACpBd,QAAQ,CAAC;QAAE,GAAGD,KAAK;QAAE,GAAGxB,oBAAoB,CAAC6B,CAAC,CAAC5B,IAAI,EAAEsC,CAAC,CAACrC,SAAS;MAAE,CAAC,CAAC;IACtE,CAAC;IAED,MAAMyB,KAAK,GAAGK,eAAe;IAC7BL,KAAK,CAACa,MAAM,EAAE;IACdf,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRE,SAAS,EAAEG,CAAC;MACZF,KAAK,EAAEA,KAAK;MACZxB,MAAM,EAAE,EAAE;MACVK,WAAW,EAAE,EAAE;MACfH,KAAK,EAAEwB,CAAC,CAAC5B;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,CAACiB,OAAO,CAAC,CAAC;EAEb,MAAMuB,YAAY,GAAG,MAAM;IACzBtB,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACvBM,KAAK,CAACG,KAAK,CAACa,MAAM,EAAE;EACtB,CAAC;EAED,MAAME,gBAAgB,GAAG,SAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC;IAClC,MAAMC,GAAG,GAAGD,MAAM,CAACE,KAAK;IACxBxB,OAAO,CAACuB,GAAG,CAAC;IACZzB,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAMS,KAAK,CAACmB,KAAK,CAACpB,SAAS,CAAE;MAAC,QAAQ,EAAEE,QAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEzD,eACT;MAAQ,SAAS,EAAC,MAAM;MAAC,OAAO,EAAEa,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEtC,eACT;MAAK,EAAE,EAAC,cAAc;MAAA,wBACpB;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACpC;QACE,IAAI,EAAC,OAAO;QACZ,GAAG,EAAC,KAAK;QACT,GAAG,EAAC,GAAG;QACP,KAAK,EAAErB,IAAK;QACZ,IAAI,EAAC,KAAK;QACV,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEsB;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EACL3B,eAAe,CAACZ,MAAM,EAAEK,WAAW,EAAEH,KAAK,CAAC,eAC5C;MAAQ,OAAO,EAAE,MAAMkB,gBAAgB,CAAC,IAAI,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,eACvE,QAAC,SAAS;MAAC,IAAI,EAAED;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV;AAAC,GA9EuBL,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}