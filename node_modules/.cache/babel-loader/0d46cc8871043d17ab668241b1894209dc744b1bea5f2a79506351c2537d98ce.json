{"ast":null,"code":"var _jsxFileName = \"/Users/user/Work/Code/dyslexia-reader/dyslexia-reader/src/components/speechkit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\nimport { Card, Dialog, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\nconst languageOptions = [\n//   { label: \"Cambodian\", value: \"km-KH\" },\n//   { label: \"Deutsch\", value: \"de-DE\" },\n{\n  label: \"English\",\n  value: \"en-AU\"\n}\n//   { label: \"Farsi\", value: \"fa-IR\" },\n//   { label: \"Français\", value: \"fr-FR\" },\n//   { label: \"Italiano\", value: \"it-IT\" },\n//   { label: \"普通话 (中国大陆) - Mandarin\", value: \"zh\" },\n//   { label: \"Portuguese\", value: \"pt-BR\" },\n//   { label: \"Español\", value: \"es-MX\" },\n//   { label: \"Svenska - Swedish\", value: \"sv-SE\" },\n];\n\nexport default function SpeechKit(_ref) {\n  _s();\n  let {\n    onClose,\n    open\n  } = _ref;\n  const classes = useStyles();\n  const [lang, setLang] = useState(\"en-AU\");\n  const [value, setValue] = useState(\"\");\n  const [blocked, setBlocked] = useState(false);\n  const onEnd = () => {\n    // You could do something here after listening has finished\n  };\n  const onResult = result => {\n    setValue(result);\n  };\n  const changeLang = event => {\n    setLang(event.target.value);\n  };\n  const onError = event => {\n    if (event.error === \"not-allowed\") {\n      setBlocked(true);\n    }\n  };\n  const {\n    listen,\n    listening,\n    stop,\n    supported\n  } = useSpeechRecognition({\n    onResult,\n    onEnd,\n    onError\n  });\n  const toggle = listening ? stop : () => {\n    setBlocked(false);\n    listen({\n      lang\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: onClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"speech-recognition-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Speech Recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !supported && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Oh no, it looks like your browser doesn't support Speech Recognition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), supported && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Click 'Listen' and start speaking.\n               SpeechRecognition will provide a transcript of what you are saying.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            form: \"speech-recognition-form\",\n            id: \"language\",\n            value: lang,\n            onChange: changeLang,\n            children: languageOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"transcript\",\n          children: \"Transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"transcript\",\n          name: \"transcript\",\n          placeholder: \"Waiting to take notes ...\",\n          value: value,\n          rows: 3,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: blocked,\n          type: \"button\",\n          onClick: toggle,\n          children: listening ? \"Stop\" : \"Listen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), blocked && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"The microphone is blocked for this site in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechKit, \"zYURgqk6NDBR0ONrAUpn4N0FRdg=\", false, function () {\n  return [useStyles, useSpeechRecognition];\n});\n_c = SpeechKit;\nvar _c;\n$RefreshReg$(_c, \"SpeechKit\");","map":{"version":3,"names":["React","useState","useSpeechRecognition","Card","Dialog","makeStyles","useStyles","avatar","backgroundColor","blue","color","languageOptions","label","value","SpeechKit","onClose","open","classes","lang","setLang","setValue","blocked","setBlocked","onEnd","onResult","result","changeLang","event","target","onError","error","listen","listening","stop","supported","toggle","display","map","option"],"sources":["/Users/user/Work/Code/dyslexia-reader/dyslexia-reader/src/components/speechkit.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\n\nimport { Card, Dialog, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nconst languageOptions = [\n  //   { label: \"Cambodian\", value: \"km-KH\" },\n  //   { label: \"Deutsch\", value: \"de-DE\" },\n  { label: \"English\", value: \"en-AU\" },\n  //   { label: \"Farsi\", value: \"fa-IR\" },\n  //   { label: \"Français\", value: \"fr-FR\" },\n  //   { label: \"Italiano\", value: \"it-IT\" },\n  //   { label: \"普通话 (中国大陆) - Mandarin\", value: \"zh\" },\n  //   { label: \"Portuguese\", value: \"pt-BR\" },\n  //   { label: \"Español\", value: \"es-MX\" },\n  //   { label: \"Svenska - Swedish\", value: \"sv-SE\" },\n];\n\nexport default function SpeechKit({ onClose, open }) {\n  const classes = useStyles();\n  const [lang, setLang] = useState(\"en-AU\");\n  const [value, setValue] = useState(\"\");\n  const [blocked, setBlocked] = useState(false);\n\n  const onEnd = () => {\n    // You could do something here after listening has finished\n  };\n\n  const onResult = (result) => {\n    setValue(result);\n  };\n\n  const changeLang = (event) => {\n    setLang(event.target.value);\n  };\n\n  const onError = (event) => {\n    if (event.error === \"not-allowed\") {\n      setBlocked(true);\n    }\n  };\n\n  const { listen, listening, stop, supported } = useSpeechRecognition({\n    onResult,\n    onEnd,\n    onError,\n  });\n\n  const toggle = listening\n    ? stop\n    : () => {\n        setBlocked(false);\n        listen({ lang });\n      };\n\n  return (\n    <Dialog onClose={onClose} aria-labelledby='simple-dialog-title' open={open}>\n      <form id='speech-recognition-form'>\n        <h2>Speech Recognition</h2>\n        {!supported && (\n          <p>\n            Oh no, it looks like your browser doesn&#39;t support Speech\n            Recognition.\n          </p>\n        )}\n        {supported && (\n          <React.Fragment>\n            <p>\n              {`Click 'Listen' and start speaking.\n               SpeechRecognition will provide a transcript of what you are saying.`}\n            </p>\n            <div style={{ display: \"flex\" }}>\n              <label htmlFor='language'>Language</label>\n              <select\n                form='speech-recognition-form'\n                id='language'\n                value={lang}\n                onChange={changeLang}\n              >\n                {languageOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <label htmlFor='transcript'>Transcript</label>\n            <textarea\n              id='transcript'\n              name='transcript'\n              placeholder='Waiting to take notes ...'\n              value={value}\n              rows={3}\n              disabled\n            />\n            <button disabled={blocked} type='button' onClick={toggle}>\n              {listening ? \"Stop\" : \"Listen\"}\n            </button>\n            {blocked && (\n              <p style={{ color: \"red\" }}>\n                The microphone is blocked for this site in your browser.\n              </p>\n            )}\n          </React.Fragment>\n        )}\n      </form>\n    </Dialog>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}